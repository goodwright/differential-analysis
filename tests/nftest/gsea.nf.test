nextflow_pipeline {
    name "test_multi_count"
    script "main.nf"

    test("run_test") {
        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assert workflow.success

            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.genekitr_gsea_result.xlsx").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.genekitr_ora_result.xlsx").exists()

            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.bar.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.bubble.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.dot.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.geneheat.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.goheat.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.gomap.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.lollipop.png").exists()
            assert new File("$outputDir/test_study/gsea/condition-A-B/condition-A-B.ora.network.png").exists()
        }
    }
}
