nextflow_pipeline {

    name "test_blocking_factor"
    script "main.nf"

    test("run_test") {
        when {
            params {
                outdir = "$outputDir"
                samplesheet = "./tests/data/samplesheets/test_wblocking.csv"
                counts = "./tests/data/counts/nfcore_rnaseq_test_salmon_gene_counts.tsv"
                blocking_factors = 'A_B:batch,B_C:'
                comparisons = 'C_A:B_C:A_B'
                skip_gsea = true
            }
        }

        then {
            assert workflow.success

            assert new File("$outputDir/test_study/deseq2/condition:A_B/condition-A-B-batch.deseq2.results.tsv").exists()
            assert path("$outputDir/test_study/deseq2/condition:A_B/condition-A-B-batch.deseq2.results.tsv").md5 == "02adf9e5bf78287aeb67fcdd41de4e03"

            assert new File("$outputDir/test_study/deseq2/condition:B_C/condition-B-C.deseq2.results.tsv").exists()
            assert path("$outputDir/test_study/deseq2/condition:B_C/condition-B-C.deseq2.results.tsv").md5 == "19b701de9bd9df990136b7055cd1d7c3"

            assert new File("$outputDir/test_study/deseq2/condition:C_A/condition-C-A.deseq2.results.tsv").exists()
            assert path("$outputDir/test_study/deseq2/condition:C_A/condition-C-A.deseq2.results.tsv").md5 == "db3165db91f4206bf76dc7c6be9bd58c"
        }
    }
}
